"""
Django settings for wirfi_web project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime
from decouple import config, Csv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

# ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv)
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'corsheaders',
    'rest_framework',
    'rest_framework_swagger',
    'rest_auth',
    'rest_auth.registration',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'wirfi_app',
    'django_filters'
]

SITE_ID = 1

LOGIN_URL = 'login/'

LOGIN_EXEMPT_URLS = (
    r'^register/',
    r'^register/verify-email/',
    r'^account-confirm-email/',
    r'^reset-password/',
    r'^validate-reset-password/[-\w]+/[-\w]+/',
    r'^reset-password/confirm/',
    r'^reset-password-mobile/',
    r'^reset/\w+/\w+/',
    r'^list-api/',
    r'^check-version/',
    r'^media/users/[.-/_\w]+',
    r'ping-server/',
    r'^media/[.-/_\w]+',
    r'^device/(\d+)/stream/$'

)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'wirfi_web.middleware.AuthKeyRequiredMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'personator'
)

REST_FRAMEWORK = {
    'DATETIME_FORMAT': "%Y-%m-%dT%H:%M:%SZ",
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'wirfi_app.authentication.MyOwnTokenAuthentication',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'EXCEPTION_HANDLER': 'wirfi_app.utils.custom_exception_handler',
}

ROOT_URLCONF = 'wirfi_web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'wirfi_app/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wirfi_web.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT'),
    }
}

# User Model settings
AUTH_USER_MODEL = 'wirfi_app.User'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },

]

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# Codes for success and failure
ERROR_CODE = 0
SUCCESS_CODE = 1
NO_DATA_CODE = 2
NO_AUTH_KEY = 3
APP_UPDATE_MANDATORY = 4
APP_UPDATE_OPTIONAL = 5

# App versions
ANDROID_VERSION = config('ANDROID_VERSION')
IOS_VERSION = config('IOS_VERSION')
OPTIONAL_UPDATE = config('OPTIONAL_UPDATE', cast=bool)
ANDROID_LINK = config('ANDROID_LINK')
IOS_LINK = config('IOS_LINK')

# Rest Auth settings
OLD_PASSWORD_FIELD_ENABLED = True
LOGOUT_ON_PASSWORD_CHANGE = True

REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'wirfi_app.serializers.UserDetailsSerializer',
    'LOGIN_SERIALIZER': 'wirfi_app.serializers.LoginSerializer',
    'PASSWORD_RESET_SERIALIZER': 'wirfi_app.serializers.PasswordResetSerializer',
}

REST_SESSION_LOGIN = False

# Email Settings
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_PORT = config('EMAIL_PORT')

FRONTEND_HOST = config('FRONTEND_HOST')

DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL')

# All Auth Settings
ACCOUNT_ADAPTER = 'wirfi_app.all_auth_adapter.MyAccountAdapter'

AUTHENTICATION_BACKENDS = (
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

# Account Settings
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

PASSWORD_VALIDATION_REGEX_PATTERN = config('PASSWORD_VALIDATION_REGEX_PATTERN')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

FILE_UPLOAD_PERMISSIONS = 0o644

STRIPE_API_KEY = config('STRIPE_API_KEY')

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

CACHE_TTL = 24 * 60 * 60

DEVICE_CONNECTION_HOST_NAME = config('DEVICE_CONNECTION_HOST_NAME')
DEVICE_CONNECTION_PASSWORD = config('DEVICE_CONNECTION_PASSWORD')
BACKEND_PING_URL_FOR_DEVICE = config('BACKEND_PING_URL_FOR_DEVICE')

# PUSHER
PUSHER_APP_ID = config('PUSHER_APP_ID')
PUSHER_KEY = config('PUSHER_KEY')
PUSHER_SECRET = config('PUSHER_SECRET')
PUSHER_CLUSTER = config('PUSHER_CLUSTER')
